{"ast":null,"code":"// client/src/reducers/userReducer.js\nimport axios from 'axios';\n\n// Action types\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nconst REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nconst LOGOUT = 'LOGOUT';\n\n// Initial state\nconst initialState = {\n  user: null,\n  // Stores user data (e.g., username, email, etc.)\n  isAuthenticated: false // Boolean to track if user is logged in\n};\n\n// Action creators\nexport const loginSuccess = userData => ({\n  type: LOGIN_SUCCESS,\n  payload: userData\n});\nexport const registerSuccess = userData => ({\n  type: REGISTER_SUCCESS,\n  payload: userData\n});\nexport const logout = () => ({\n  type: LOGOUT\n});\n\n// Async action to handle login\nexport const login = (username, password) => async dispatch => {\n  try {\n    const response = await axios.post('/api/login', {\n      username,\n      password\n    });\n    dispatch(loginSuccess(response.data)); // Dispatch login success with user data\n  } catch (error) {\n    console.error('Login failed:', error);\n    // Optionally, you could dispatch a login failure action here\n  }\n};\n\n// Async action to handle registration\nexport const register = (username, email, password) => async dispatch => {\n  try {\n    const response = await axios.post('/api/register', {\n      username,\n      email,\n      password\n    });\n    dispatch(registerSuccess(response.data)); // Dispatch register success with user data\n  } catch (error) {\n    console.error('Registration failed:', error);\n    // Optionally, you could dispatch a registration failure action here\n  }\n};\n\n// Async action to handle logout\nexport const logoutUser = () => dispatch => {\n  // Clear any client-side storage if needed (like JWT in local storage)\n  dispatch(logout()); // Dispatch logout action\n};\n\n// Reducer\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false\n      };\n    default:\n      return state;\n  }\n};\nexport default userReducer;","map":{"version":3,"names":["axios","LOGIN_SUCCESS","REGISTER_SUCCESS","LOGOUT","initialState","user","isAuthenticated","loginSuccess","userData","type","payload","registerSuccess","logout","login","username","password","dispatch","response","post","data","error","console","register","email","logoutUser","userReducer","state","action"],"sources":["C:/Users/Chase/Desktop/PERN/client/src/reducers/userReducer.js"],"sourcesContent":["// client/src/reducers/userReducer.js\r\nimport axios from 'axios';\r\n\r\n// Action types\r\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nconst REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nconst LOGOUT = 'LOGOUT';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  user: null,              // Stores user data (e.g., username, email, etc.)\r\n  isAuthenticated: false,  // Boolean to track if user is logged in\r\n};\r\n\r\n// Action creators\r\nexport const loginSuccess = (userData) => ({\r\n  type: LOGIN_SUCCESS,\r\n  payload: userData,\r\n});\r\n\r\nexport const registerSuccess = (userData) => ({\r\n  type: REGISTER_SUCCESS,\r\n  payload: userData,\r\n});\r\n\r\nexport const logout = () => ({\r\n  type: LOGOUT,\r\n});\r\n\r\n// Async action to handle login\r\nexport const login = (username, password) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post('/api/login', { username, password });\r\n    dispatch(loginSuccess(response.data));  // Dispatch login success with user data\r\n  } catch (error) {\r\n    console.error('Login failed:', error);\r\n    // Optionally, you could dispatch a login failure action here\r\n  }\r\n};\r\n\r\n// Async action to handle registration\r\nexport const register = (username, email, password) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post('/api/register', { username, email, password });\r\n    dispatch(registerSuccess(response.data));  // Dispatch register success with user data\r\n  } catch (error) {\r\n    console.error('Registration failed:', error);\r\n    // Optionally, you could dispatch a registration failure action here\r\n  }\r\n};\r\n\r\n// Async action to handle logout\r\nexport const logoutUser = () => (dispatch) => {\r\n  // Clear any client-side storage if needed (like JWT in local storage)\r\n  dispatch(logout());  // Dispatch logout action\r\n};\r\n\r\n// Reducer\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCESS:\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isAuthenticated: true,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        isAuthenticated: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,aAAa,GAAG,eAAe;AACrC,MAAMC,gBAAgB,GAAG,kBAAkB;AAC3C,MAAMC,MAAM,GAAG,QAAQ;;AAEvB;AACA,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,IAAI;EAAe;EACzBC,eAAe,EAAE,KAAK,CAAG;AAC3B,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAIC,QAAQ,KAAM;EACzCC,IAAI,EAAER,aAAa;EACnBS,OAAO,EAAEF;AACX,CAAC,CAAC;AAEF,OAAO,MAAMG,eAAe,GAAIH,QAAQ,KAAM;EAC5CC,IAAI,EAAEP,gBAAgB;EACtBQ,OAAO,EAAEF;AACX,CAAC,CAAC;AAEF,OAAO,MAAMI,MAAM,GAAGA,CAAA,MAAO;EAC3BH,IAAI,EAAEN;AACR,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMU,KAAK,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC/D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,YAAY,EAAE;MAAEJ,QAAQ;MAAEC;IAAS,CAAC,CAAC;IACvEC,QAAQ,CAACT,YAAY,CAACU,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAAE;EAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAME,QAAQ,GAAGA,CAACR,QAAQ,EAAES,KAAK,EAAER,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EACzE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,eAAe,EAAE;MAAEJ,QAAQ;MAAES,KAAK;MAAER;IAAS,CAAC,CAAC;IACjFC,QAAQ,CAACL,eAAe,CAACM,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAAE;EAC7C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,UAAU,GAAGA,CAAA,KAAOR,QAAQ,IAAK;EAC5C;EACAA,QAAQ,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC,CAAE;AACvB,CAAC;;AAED;AACA,MAAMa,WAAW,GAAGA,CAACC,KAAK,GAAGtB,YAAY,EAAEuB,MAAM,KAAK;EACpD,QAAQA,MAAM,CAAClB,IAAI;IACjB,KAAKR,aAAa;IAClB,KAAKC,gBAAgB;MACnB,OAAO;QACL,GAAGwB,KAAK;QACRrB,IAAI,EAAEsB,MAAM,CAACjB,OAAO;QACpBJ,eAAe,EAAE;MACnB,CAAC;IACH,KAAKH,MAAM;MACT,OAAO;QACL,GAAGuB,KAAK;QACRrB,IAAI,EAAE,IAAI;QACVC,eAAe,EAAE;MACnB,CAAC;IACH;MACE,OAAOoB,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}